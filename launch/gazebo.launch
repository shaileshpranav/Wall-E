
<launch>
    <env name="GAZEBO_MODEL_PATH"
       value="$(find wall-e)/models:$(optenv GAZEBO_MODEL_PATH)" />
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]" />
    <arg name="x_pos" default="4.0" />
    <arg name="y_pos" default="1.0" />
    <arg name="z_pos" default="0.0" />
   
    <node pkg="wall-e" name="objectSpawner" type="object_spawner_node" output="screen"/>

    <!-- <node name="map_server" pkg="map_server" type="map_server" args="$(find wall-e)/maps/final_world.yaml" >
        <param name="frame_id" value="map" />
    </node>
    <include file="$(find wall-e)/launch/explorer_amcl.launch" />
    <include file="$(find wall-e)/launch/explorer_move_base.launch" />
 -->


    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find wall-e)/world/final_world.world" />
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="gui" value="true" />
        <arg name="headless" value="false" />
        <arg name="debug" value="false" />
    </include>

    <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
      
  <!-- <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group> -->
</launch>